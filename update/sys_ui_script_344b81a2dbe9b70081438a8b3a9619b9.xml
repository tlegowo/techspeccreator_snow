<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_script">
    <sys_ui_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <description>Ui Script &#13;
1- Converts embeded images to dataUrl to make them compitable with document&#13;
2- Add's TOC to document&#13;
3- Add's header-footer properties to document</description>
        <global>false</global>
        <name>x_kpmg6_tech_spec.DocCreator.js</name>
        <script><![CDATA[if (typeof jQuery !== "undefined" && typeof saveAs !== "undefined") {
    (function($) {
        $.fn.wordExport = function(fileName,headerHTML) {
            fileName = typeof fileName !== 'undefined' ? fileName : "DocCreator";
            var static = {
                mhtml: {
                    top: "Mime-Version: 1.0\nContent-Base: " + "" + "\nContent-Type: Multipart/related; boundary=\"NEXT.ITEM-BOUNDARY\";type=\"text/html\"\n\n--NEXT.ITEM-BOUNDARY\nContent-Type: text/html; charset=\"utf-8\"\nContent-Location: " + "" + "\n\n<!DOCTYPE html>\n<html>\n_html_</html>",
                    head: "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<style>\n_styles_\n</style>\n</head>\n",
                    body: "<body>_body_</body>" 
                }
            };
			
            var options = {
                maxWidth: 624
            };
            // Clone selected element before manipulating it
            var markup = $(this).clone();

            // Remove hidden elements from the output
            markup.each(function() {
                var self = $(this);
                if (self.is(':hidden'))
                    self.remove();
            });

            // Embed all images using Data URLs
           var images = Array();
            var img = markup.find('img');
            for (var i = 0; i < img.length; i++) {
                // Calculate dimensions of output image
             //  alert(img[i].src);
				var w = Math.min(img[i].width, options.maxWidth);
                var h = img[i].height * (w / img[i].width);
                // Create canvas for converting image to data URL
                var canvas = document.createElement("CANVAS");
                canvas.width = w;
                canvas.height = h;
                // Draw image to canvas
                var context = canvas.getContext('2d');
                context.drawImage(img[i], 0, 0, w, h);
                // Get data URL encoding of image
                var uri = canvas.toDataURL();
				
                $(img[i]).attr("src", img[i].src);
                img[i].width = w;
                img[i].height = h;
                // Save encoded image to array
                images[i] = {
                    type: uri.substring(uri.indexOf(":") + 1, uri.indexOf(";")),
                    encoding: uri.substring(uri.indexOf(";") + 1, uri.indexOf(",")),
                    location: $(img[i]).attr("src"),
                    data: uri.substring(uri.indexOf(",") + 1)
                };
            }

            // Prepare bottom of mhtml file with image data
            var mhtmlBottom = "\n";
            for (var i = 0; i < images.length; i++) {
                mhtmlBottom += "--NEXT.ITEM-BOUNDARY\n";
                mhtmlBottom += "Content-Location: " + images[i].location + "\n";
                mhtmlBottom += "Content-Type: " + images[i].type + "\n";
                mhtmlBottom += "Content-Transfer-Encoding: " + images[i].encoding + "\n\n";
                mhtmlBottom += images[i].data + "\n\n";
            }
            mhtmlBottom += "--NEXT.ITEM-BOUNDARY--";

            //TODO: load css from included stylesheet
            var styles = "";
			
			var MarkUPHTML = markup.html() + headerHTML  ;
            // Aggregate parts of the file together
             MarkUPHTML = MarkUPHTML.toString().replace('#{toc}','<p class=MsoToc1>Table of Contents  <!--[if supportFields]> <span style="mso-element:field-begin"></span> TOC \o "1-3" \\u <span style="mso-element:field-separator"></span> <![endif]--> <span style="mso-no-proof:yes">Table of content - Please right-click and choose "Update fields".</span> <!--[if supportFields]> <span style="mso-element:field-end"></span> <![endif]--> </p>');
			
			var fileContent = static.mhtml.top.replace("_html_", static.mhtml.head.replace("_styles_", styles) + static.mhtml.body.replace("_body_", MarkUPHTML)) + mhtmlBottom;
			
			// Create a Blob with the file contents
            var blob = new Blob([fileContent], {
                type: "application/msword;charset=utf-8"
            });
            saveAs(blob, fileName + ".doc");
        };
    })(jQuery);
} else {
    if (typeof jQuery === "undefined") {
        console.error("missing dependency (jQuery)");
    }
    if (typeof saveAs === "undefined") {
        console.error("missing dependency (FileUtility.js)");
    }
}]]></script>
        <script_name>DocCreator.js</script_name>
        <sys_class_name>sys_ui_script</sys_class_name>
        <sys_created_by>thomas.legowo</sys_created_by>
        <sys_created_on>2019-05-24 04:15:22</sys_created_on>
        <sys_id>344b81a2dbe9b70081438a8b3a9619b9</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>x_kpmg6_tech_spec.DocCreator.js</sys_name>
        <sys_package display_value="Tech Spec Creator" source="x_kpmg6_tech_spec">6d143da1dbedf30081438a8b3a961939</sys_package>
        <sys_policy/>
        <sys_scope display_value="Tech Spec Creator">6d143da1dbedf30081438a8b3a961939</sys_scope>
        <sys_update_name>sys_ui_script_344b81a2dbe9b70081438a8b3a9619b9</sys_update_name>
        <sys_updated_by>thomas.legowo</sys_updated_by>
        <sys_updated_on>2019-05-24 04:15:22</sys_updated_on>
        <ui_type>0</ui_type>
        <use_scoped_format>false</use_scoped_format>
    </sys_ui_script>
</record_update>
